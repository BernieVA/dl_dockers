name: build_push_large
# this workflow added maximize-build-space action to get larger disc to build.
run-name: B&DL ${{ github.event.inputs.hub_username }}/${{ github.event.inputs.build_folder }}:${{ github.event.inputs.tag }}  
on:
  workflow_dispatch:
    inputs:
      build_folder:
        description: 'From which folder, the Dockerfiles will be built'  
        type: string   
        required: false
        default: 'cosmos_llamacpp'
      tags:
        description: 'Comma-separated list of image tags'
        type: string
        required: false
        default: 'latest'
      hub_username:
        description: 'Docker hub username'  
        type: string   
        required: false
        default: 'brokenjade'

jobs:
  build_docker:
    runs-on: ubuntu-latest
    steps:
      - name: Backup docker files
        run: |
          echo "backup moby/buildkit image"
          sudo docker image save -o ${GITHUB_WORKSPACE}/images.tar moby/buildkit
          sudo docker system prune -a -f
          echo "Back up /var/lib/docker folder structure and other files"
          sudo rsync -aPq /var/lib/docker/ ${GITHUB_WORKSPACE}/docker 


      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          overprovision-lvm: 'true'          
          remove-dotnet: 'true'
          # instead of using default value to mount to build path, /var/lib/docker/ is really the place we need more spaces.
          build-mount-path: '/var/lib/docker/'

      - name: Restore docker files
        run: |
          sudo rsync -aPq ${GITHUB_WORKSPACE}/docker/ /var/lib/docker
          sudo rm -rf ${GITHUB_WORKSPACE}/docker
          sudo ls ${GITHUB_WORKSPACE} -l
          sudo docker image load -i ${GITHUB_WORKSPACE}/images.tar
          sudo rm ${GITHUB_WORKSPACE}/images.tar
      
      # the following script does not work yet. might be usable later with some additional tweaks.
      # - name: change location
      #   run: |
      #     sudo systemctl stop docker
      #     sudo mkdir /home/runner/work/dl_dockers/docker
      #     sudo chmod 777 /home/runner/work/dl_dockers/docker
      #     sudo dockerd --data-root /home/runner/work/dl_dockers/docker &
      #   env:
      #     DOCKER_DATA_ROOT: /home/runner/work/dl_dockers/docker
      
      # - name: Set docker storage to lvm
      #   continue-on-error: true
      #   run: |
      #     sudo docker images
      #     sudo docker rmi node:16
      #     sudo docker rmi node:18
      #     sudo docker rmi debian:10
      #     sudo docker rmi ubuntu:20.04
      #     # https://tienbm90.medium.com/how-to-change-docker-root-data-directory-89a39be1a70b
      #     sudo systemctl stop docker
      #     echo "try restart and restop..."
      #     sudo systemctl start docker
      #     sudo systemctl status docker.service
      #     sudo systemctl stop docker
      #     sudo systemctl status docker.service
      #     echo "{\"data-root\": \"/home/runner/work/docker\", \"storage-driver\": \"fuse-overlayfs\"}"  | sudo tee -a /etc/docker/daemon.json 
      #     echo "copy existing files..."
      #     sudo rsync -aPq /var/lib/docker/ /home/runner/work/docker
      #     # sudo rm -rf /var/lib/docker
      #     sudo ls -l /home/runner/work/docker
      #     echo "restart docker..."
      #     sudo df -h
      #     # sudo modprobe -r overlay && modprobe overlay redirect_dir=on
      #     sudo systemctl start docker
      
      - name: Check docker status
        continue-on-error: true
        run: |
          sudo systemctl status docker.service
          
      - name: Check docker info
        continue-on-error: true
        run: |
          sudo docker info

      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: buildx-${{ github.event.inputs.build_folder  }}
          restore-keys: |
            buildx-${{ github.event.inputs.build_folder  }}      

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ github.event.inputs.hub_username }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build
        continue-on-error: false
        run: |
          pwd
          ls
          cd ${{ github.event.inputs.build_folder }}
          docker build -t ${{ github.event.inputs.hub_username }}/${{ github.event.inputs.build_folder }}:temp .
          
          tags=${{ github.event.inputs.tags }}
          IFS=',' read -ra TAG_ARRAY <<< "$tags"
          for tag in "${TAG_ARRAY[@]}"; do
            docker tag ${{ github.event.inputs.hub_username }}/${{ github.event.inputs.build_folder }}:temp ${{ github.event.inputs.hub_username }}/${{ github.event.inputs.build_folder }}:$tag
          done
          
      - name: list images
        run: docker images

      - name: check storage
        run: |
          sudo df -h
          ls /tmp -l

      - name: publish
        run: |
          tags=${{ github.event.inputs.tags }}
          IFS=',' read -ra TAG_ARRAY <<< "$tags"
          for tag in "${TAG_ARRAY[@]}"; do
            docker image push ${{ github.event.inputs.hub_username }}/${{ github.event.inputs.build_folder }}:$tag
          done

      - name: Update Docker Hub Description
        uses: peter-evans/dockerhub-description@v4
        with:
          username: ${{ github.event.inputs.hub_username }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          repository: ${{ github.event.inputs.hub_username }}/${{ github.event.inputs.build_folder }}
          readme-filepath: "${{ github.event.inputs.build_folder }}/README.MD"

      # only works if built on self-hosted runners. Github runners do not have enough space for this.

      # - name: Save image as a tar for later use ðŸ’¾
      #   run: docker save ${{ github.event.inputs.hub_username }}/${{ github.event.inputs.build_folder }}:${{ github.event.inputs.tag }} -o /tmp/${{ github.event.inputs.hub_username }}-${{ github.event.inputs.build_folder }}.tar
      #   shell: bash
      # - name: Upload image as artifact ðŸ’¾
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: ${{ github.event.inputs.hub_username }}-${{ github.event.inputs.build_folder }}
      #     path: /tmp/${{ github.event.inputs.hub_username }}-${{ github.event.inputs.build_folder }}.tar
      #     retention-days: 3
