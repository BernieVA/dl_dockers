name: build_win_env
run-name: B&D ${{ github.event.inputs.build_folder }}
on:
  workflow_dispatch:
    inputs:
      build_folder:
        description: 'From which folder, the conda environment will be built'  
        type: string   
        required: false
        default: 'win_cuda'
      target_folder:
        description: 'target folder path (must be on D drive)'
        type: string
        required: false
        default: 'D:/conda_envs/mine/'

permissions:
  actions: write
  contents: read
        
jobs:
  create_env:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'
    
    - name: Check Setting Folder
      run: |
        pwd
        ls ${{ github.event.inputs.build_folder }}
    
    - name: Cache Miniforge Environment
      uses: actions/cache@v2
      with:
        path: ${{ github.event.inputs.target_folder }}
        key: ${{ runner.os }}-conda-${{ hashFiles('${{ github.event.inputs.build_folder }}/environment.yml') }}
        restore-keys: |
          ${{ runner.os }}-conda-

    - name: Install miniforge
      uses: conda-incubator/setup-miniconda@v3
      with:
        auto-activate-base: true
        miniforge-version: latest
    
    - name: Create Conda Environment
      run: |
        cd ${{ github.event.inputs.build_folder }}
        conda env create -f environment.yml -p ${{ github.event.inputs.target_folder }}

    - name: check folder
      run: |
        ls ${{ github.event.inputs.target_folder }}
        
    - name: Check for 7-Zip installation
      run: |
        if (!(Test-Path "C:\Program Files\7-Zip\7z.exe")) {
          choco install 7zip
        }
  
    - name: Compress and split folder
      run: |
        pwd
        7z a -t7z -v10m ${{ github.event.inputs.build_folder }}.7z ${{ github.event.inputs.target_folder }}*
        ls *.7z*

    - name: Upload each volume as a separate artifact
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GITHUB_REPOSITORY: ${{ github.repository }}
        GITHUB_RUN_ID: ${{ github.run_id }}
      run: |
        pip install requests
        python upload_artifacts.py